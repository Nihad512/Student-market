{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\house-marketing-main\\\\src\\\\pages\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase.config';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      landlord = _useState4[0],\n      setLandlord = _useState4[1]; // eslint-disable-next-line\n\n\n  var _useSearchParams = useSearchParams(),\n      _useSearchParams2 = _slicedToArray(_useSearchParams, 2),\n      searchParams = _useSearchParams2[0],\n      setSearchParams = _useSearchParams2[1];\n\n  var params = useParams();\n  useEffect(function () {\n    var getLandlord = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var docRef, docSnap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                docRef = doc(db, 'users', params.landlordId);\n                _context.next = 3;\n                return getDoc(docRef);\n\n              case 3:\n                docSnap = _context.sent;\n\n                if (docSnap.exists()) {\n                  setLandlord(docSnap.data());\n                } else {\n                  toast.error('Could not get landlord data');\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getLandlord() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getLandlord();\n  }, [params.landlordId]);\n\n  var onChange = function onChange(e) {\n    return setMessage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pageHeader\",\n        children: \"Contact Landlord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), landlord !== null && /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactLandlord\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"landlordName\",\n          children: [\"Contact \", landlord === null || landlord === void 0 ? void 0 : landlord.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"messageForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            className: \"messageLabel\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            id: \"message\",\n            className: \"textarea\",\n            value: message,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"mailto:\".concat(landlord.email, \"?Subject=\").concat(searchParams.get('listingName'), \"&body=\").concat(message),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"primaryButton\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"aDJZRIFLV+AjhBEj2DtaYr2s+4s=\", false, function () {\n  return [useSearchParams, useParams];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/house-marketing-main/src/pages/Contact.jsx"],"names":["useState","useEffect","useParams","useSearchParams","doc","getDoc","db","toast","Contact","message","setMessage","landlord","setLandlord","searchParams","setSearchParams","params","getLandlord","docRef","landlordId","docSnap","exists","data","error","onChange","e","target","value","name","email","get"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams, useSearchParams } from 'react-router-dom'\nimport { doc, getDoc } from 'firebase/firestore'\nimport { db } from '../firebase.config'\nimport { toast } from 'react-toastify'\n\nfunction Contact() {\n  const [message, setMessage] = useState('')\n  const [landlord, setLandlord] = useState(null)\n  // eslint-disable-next-line\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const params = useParams()\n\n  useEffect(() => {\n    const getLandlord = async () => {\n      const docRef = doc(db, 'users', params.landlordId)\n      const docSnap = await getDoc(docRef)\n\n      if (docSnap.exists()) {\n        setLandlord(docSnap.data())\n      } else {\n        toast.error('Could not get landlord data')\n      }\n    }\n\n    getLandlord()\n  }, [params.landlordId])\n\n  const onChange = (e) => setMessage(e.target.value)\n\n  return (\n    <div className='pageContainer'>\n      <header>\n        <p className='pageHeader'>Contact Landlord</p>\n      </header>\n\n      {landlord !== null && (\n        <main>\n          <div className='contactLandlord'>\n            <p className='landlordName'>Contact {landlord?.name}</p>\n          </div>\n\n          <form className='messageForm'>\n            <div className='messageDiv'>\n              <label htmlFor='message' className='messageLabel'>\n                Message\n              </label>\n              <textarea\n                name='message'\n                id='message'\n                className='textarea'\n                value={message}\n                onChange={onChange}\n              ></textarea>\n            </div>\n\n            <a\n              href={`mailto:${landlord.email}?Subject=${searchParams.get(\n                'listingName'\n              )}&body=${message}`}\n            >\n              <button type='button' className='primaryButton'>\n                Send Message\n              </button>\n            </a>\n          </form>\n        </main>\n      )}\n    </div>\n  )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}