{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\house-marketing-main\\\\src\\\\pages\\\\Offers.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { collection, getDocs, query, where, orderBy, limit, startAfter } from 'firebase/firestore';\nimport { db } from '../firebase.config';\nimport { toast } from 'react-toastify';\nimport Spinner from '../components/Spinner';\nimport ListingItem from '../components/ListingItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Offers() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      listings = _useState2[0],\n      setListings = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastFetchedListing = _useState6[0],\n      setLastFetchedListing = _useState6[1];\n\n  useEffect(function () {\n    var fetchListings = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var listingsRef, q, querySnap, lastVisible, _listings;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                // Get reference\n                listingsRef = collection(db, 'listings'); // Create a query\n\n                q = query(listingsRef, where('offer', '==', true), orderBy('timestamp', 'desc'), limit(10)); // Execute query\n\n                _context.next = 5;\n                return getDocs(q);\n\n              case 5:\n                querySnap = _context.sent;\n                lastVisible = querySnap.docs[querySnap.docs.length - 1];\n                setLastFetchedListing(lastVisible);\n                _listings = [];\n                querySnap.forEach(function (doc) {\n                  return _listings.push({\n                    id: doc.id,\n                    data: doc.data()\n                  });\n                });\n                setListings(_listings);\n                setLoading(false);\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                toast.error('Could not fetch listings');\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n\n      return function fetchListings() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchListings();\n  }, []); // Pagination / Load More\n\n  var onFetchMoreListings = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var listingsRef, q, querySnap, lastVisible, _listings2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              // Get reference\n              listingsRef = collection(db, 'listings'); // Create a query\n\n              q = query(listingsRef, where('offer', '==', true), orderBy('timestamp', 'desc'), startAfter(lastFetchedListing), limit(10)); // Execute query\n\n              _context2.next = 5;\n              return getDocs(q);\n\n            case 5:\n              querySnap = _context2.sent;\n              lastVisible = querySnap.docs[querySnap.docs.length - 1];\n              setLastFetchedListing(lastVisible);\n              _listings2 = [];\n              querySnap.forEach(function (doc) {\n                return _listings2.push({\n                  id: doc.id,\n                  data: doc.data()\n                });\n              });\n              setListings(function (prevState) {\n                return [].concat(_toConsumableArray(prevState), _listings2);\n              });\n              setLoading(false);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              toast.error('Could not fetch listings');\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 14]]);\n    }));\n\n    return function onFetchMoreListings() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pageHeader\",\n        children: \"Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : listings && listings.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"categoryListings\",\n          children: listings.map(function (listing) {\n            return /*#__PURE__*/_jsxDEV(ListingItem, {\n              listing: listing.data,\n              id: listing.id\n            }, listing.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), lastFetchedListing && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loadMore\",\n        onClick: onFetchMoreListings,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no current offers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Offers, \"NST15MXKUCwUEcquGKyKgm+NhCs=\");\n\n_c = Offers;\nexport default Offers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Offers\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/house-marketing-main/src/pages/Offers.jsx"],"names":["useEffect","useState","collection","getDocs","query","where","orderBy","limit","startAfter","db","toast","Spinner","ListingItem","Offers","listings","setListings","loading","setLoading","lastFetchedListing","setLastFetchedListing","fetchListings","listingsRef","q","querySnap","lastVisible","docs","length","forEach","doc","push","id","data","error","onFetchMoreListings","prevState","map","listing"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,UAPF,QAQO,oBARP;AASA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AAChB,kBAAgCZ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8Bd,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAoDhB,QAAQ,CAAC,IAAD,CAA5D;AAAA;AAAA,MAAOiB,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,aAAa;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElB;AACMC,gBAAAA,WAHY,GAGEnB,UAAU,CAACO,EAAD,EAAK,UAAL,CAHZ,EAKlB;;AACMa,gBAAAA,CANY,GAMRlB,KAAK,CACbiB,WADa,EAEbhB,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,CAFQ,EAGbC,OAAO,CAAC,WAAD,EAAc,MAAd,CAHM,EAIbC,KAAK,CAAC,EAAD,CAJQ,CANG,EAalB;;AAbkB;AAAA,uBAcMJ,OAAO,CAACmB,CAAD,CAdb;;AAAA;AAcZC,gBAAAA,SAdY;AAgBZC,gBAAAA,WAhBY,GAgBED,SAAS,CAACE,IAAV,CAAeF,SAAS,CAACE,IAAV,CAAeC,MAAf,GAAwB,CAAvC,CAhBF;AAiBlBP,gBAAAA,qBAAqB,CAACK,WAAD,CAArB;AAEMV,gBAAAA,SAnBY,GAmBD,EAnBC;AAqBlBS,gBAAAA,SAAS,CAACI,OAAV,CAAkB,UAACC,GAAD,EAAS;AACzB,yBAAOd,SAAQ,CAACe,IAAT,CAAc;AACnBC,oBAAAA,EAAE,EAAEF,GAAG,CAACE,EADW;AAEnBC,oBAAAA,IAAI,EAAEH,GAAG,CAACG,IAAJ;AAFa,mBAAd,CAAP;AAID,iBALD;AAOAhB,gBAAAA,WAAW,CAACD,SAAD,CAAX;AACAG,gBAAAA,UAAU,CAAC,KAAD,CAAV;AA7BkB;AAAA;;AAAA;AAAA;AAAA;AA+BlBP,gBAAAA,KAAK,CAACsB,KAAN,CAAY,0BAAZ;;AA/BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAbZ,aAAa;AAAA;AAAA;AAAA,OAAnB;;AAmCAA,IAAAA,aAAa;AACd,GArCQ,EAqCN,EArCM,CAAT,CALgB,CA4ChB;;AACA,MAAMa,mBAAmB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAExB;AACMZ,cAAAA,WAHkB,GAGJnB,UAAU,CAACO,EAAD,EAAK,UAAL,CAHN,EAKxB;;AACMa,cAAAA,CANkB,GAMdlB,KAAK,CACbiB,WADa,EAEbhB,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,CAFQ,EAGbC,OAAO,CAAC,WAAD,EAAc,MAAd,CAHM,EAIbE,UAAU,CAACU,kBAAD,CAJG,EAKbX,KAAK,CAAC,EAAD,CALQ,CANS,EAcxB;;AAdwB;AAAA,qBAeAJ,OAAO,CAACmB,CAAD,CAfP;;AAAA;AAelBC,cAAAA,SAfkB;AAiBlBC,cAAAA,WAjBkB,GAiBJD,SAAS,CAACE,IAAV,CAAeF,SAAS,CAACE,IAAV,CAAeC,MAAf,GAAwB,CAAvC,CAjBI;AAkBxBP,cAAAA,qBAAqB,CAACK,WAAD,CAArB;AAEMV,cAAAA,UApBkB,GAoBP,EApBO;AAsBxBS,cAAAA,SAAS,CAACI,OAAV,CAAkB,UAACC,GAAD,EAAS;AACzB,uBAAOd,UAAQ,CAACe,IAAT,CAAc;AACnBC,kBAAAA,EAAE,EAAEF,GAAG,CAACE,EADW;AAEnBC,kBAAAA,IAAI,EAAEH,GAAG,CAACG,IAAJ;AAFa,iBAAd,CAAP;AAID,eALD;AAOAhB,cAAAA,WAAW,CAAC,UAACmB,SAAD;AAAA,oDAAmBA,SAAnB,GAAiCpB,UAAjC;AAAA,eAAD,CAAX;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;AA9BwB;AAAA;;AAAA;AAAA;AAAA;AAgCxBP,cAAAA,KAAK,CAACsB,KAAN,CAAY,0BAAZ;;AAhCwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBC,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAoCA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAKGjB,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAEJF,QAAQ,IAAIA,QAAQ,CAACY,MAAT,GAAkB,CAA9B,gBACF;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,oBACGZ,QAAQ,CAACqB,GAAT,CAAa,UAACC,OAAD;AAAA,gCACZ,QAAC,WAAD;AACE,cAAA,OAAO,EAAEA,OAAO,CAACL,IADnB;AAEE,cAAA,EAAE,EAAEK,OAAO,CAACN;AAFd,eAGOM,OAAO,CAACN,EAHf;AAAA;AAAA;AAAA;AAAA,qBADY;AAAA,WAAb;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAA;AAAA;AAAA;AAAA,cAdF,EAeGZ,kBAAkB,iBACjB;AAAG,QAAA,SAAS,EAAC,UAAb;AAAwB,QAAA,OAAO,EAAEe,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA,oBADE,gBAuBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GApHQpB,M;;KAAAA,M;AAsHT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport {\n  collection,\n  getDocs,\n  query,\n  where,\n  orderBy,\n  limit,\n  startAfter,\n} from 'firebase/firestore'\nimport { db } from '../firebase.config'\nimport { toast } from 'react-toastify'\nimport Spinner from '../components/Spinner'\nimport ListingItem from '../components/ListingItem'\n\nfunction Offers() {\n  const [listings, setListings] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [lastFetchedListing, setLastFetchedListing] = useState(null)\n\n  useEffect(() => {\n    const fetchListings = async () => {\n      try {\n        // Get reference\n        const listingsRef = collection(db, 'listings')\n\n        // Create a query\n        const q = query(\n          listingsRef,\n          where('offer', '==', true),\n          orderBy('timestamp', 'desc'),\n          limit(10)\n        )\n\n        // Execute query\n        const querySnap = await getDocs(q)\n\n        const lastVisible = querySnap.docs[querySnap.docs.length - 1]\n        setLastFetchedListing(lastVisible)\n\n        const listings = []\n\n        querySnap.forEach((doc) => {\n          return listings.push({\n            id: doc.id,\n            data: doc.data(),\n          })\n        })\n\n        setListings(listings)\n        setLoading(false)\n      } catch (error) {\n        toast.error('Could not fetch listings')\n      }\n    }\n\n    fetchListings()\n  }, [])\n\n  // Pagination / Load More\n  const onFetchMoreListings = async () => {\n    try {\n      // Get reference\n      const listingsRef = collection(db, 'listings')\n\n      // Create a query\n      const q = query(\n        listingsRef,\n        where('offer', '==', true),\n        orderBy('timestamp', 'desc'),\n        startAfter(lastFetchedListing),\n        limit(10)\n      )\n\n      // Execute query\n      const querySnap = await getDocs(q)\n\n      const lastVisible = querySnap.docs[querySnap.docs.length - 1]\n      setLastFetchedListing(lastVisible)\n\n      const listings = []\n\n      querySnap.forEach((doc) => {\n        return listings.push({\n          id: doc.id,\n          data: doc.data(),\n        })\n      })\n\n      setListings((prevState) => [...prevState, ...listings])\n      setLoading(false)\n    } catch (error) {\n      toast.error('Could not fetch listings')\n    }\n  }\n\n  return (\n    <div className='category'>\n      <header>\n        <p className='pageHeader'>Offers</p>\n      </header>\n\n      {loading ? (\n        <Spinner />\n      ) : listings && listings.length > 0 ? (\n        <>\n          <main>\n            <ul className='categoryListings'>\n              {listings.map((listing) => (\n                <ListingItem\n                  listing={listing.data}\n                  id={listing.id}\n                  key={listing.id}\n                />\n              ))}\n            </ul>\n          </main>\n\n          <br />\n          <br />\n          {lastFetchedListing && (\n            <p className='loadMore' onClick={onFetchMoreListings}>\n              Load More\n            </p>\n          )}\n        </>\n      ) : (\n        <p>There are no current offers</p>\n      )}\n    </div>\n  )\n}\n\nexport default Offers\n"]},"metadata":{},"sourceType":"module"}