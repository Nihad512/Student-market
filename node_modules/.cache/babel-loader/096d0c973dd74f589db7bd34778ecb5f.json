{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Asus/Desktop/house-marketing-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\house-marketing-main\\\\src\\\\components\\\\OAuth.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase.config';\nimport { toast } from 'react-toastify';\nimport googleIcon from \"../assets/svg/googleIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OAuth() {\n  _s();\n\n  var navigate = useNavigate();\n  var location = useLocation();\n\n  var onGoogleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var auth, provider, result, user, docRef, docSnap;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              auth = getAuth();\n              provider = new GoogleAuthProvider();\n              _context.next = 5;\n              return signInWithPopup(auth, provider);\n\n            case 5:\n              result = _context.sent;\n              user = result.user; // Check for user\n\n              docRef = doc(db, 'users', user.uid);\n              _context.next = 10;\n              return getDoc(docRef);\n\n            case 10:\n              docSnap = _context.sent;\n\n              if (docSnap.exists()) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 14;\n              return setDoc(doc(db, 'users', user.uid), {\n                name: user.displayName,\n                email: user.email,\n                timestamp: serverTimestamp()\n              });\n\n            case 14:\n              navigate('/');\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              toast.error('Could not authorize with Google');\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 17]]);\n    }));\n\n    return function onGoogleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"socialLogin\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sign \", location.pathname === '/sign-up' ? 'up' : 'in', \" with \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"socialIconDiv\",\n      onClick: onGoogleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"socialIconImg\",\n        src: googleIcon,\n        alt: \"google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OAuth, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = OAuth;\nexport default OAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"OAuth\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/house-marketing-main/src/components/OAuth.jsx"],"names":["useLocation","useNavigate","getAuth","signInWithPopup","GoogleAuthProvider","doc","setDoc","getDoc","serverTimestamp","db","toast","OAuth","navigate","location","onGoogleClick","auth","provider","result","user","docRef","uid","docSnap","exists","name","displayName","email","timestamp","error","pathname","googleIcon"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,eAA9B,QAAqD,oBAArD;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,MAAMc,aAAa;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,cAAAA,IAFY,GAELb,OAAO,EAFF;AAGZc,cAAAA,QAHY,GAGD,IAAIZ,kBAAJ,EAHC;AAAA;AAAA,qBAIGD,eAAe,CAACY,IAAD,EAAOC,QAAP,CAJlB;;AAAA;AAIZC,cAAAA,MAJY;AAKZC,cAAAA,IALY,GAKLD,MAAM,CAACC,IALF,EAOlB;;AACMC,cAAAA,MARY,GAQHd,GAAG,CAACI,EAAD,EAAK,OAAL,EAAcS,IAAI,CAACE,GAAnB,CARA;AAAA;AAAA,qBASIb,MAAM,CAACY,MAAD,CATV;;AAAA;AASZE,cAAAA,OATY;;AAAA,kBAYbA,OAAO,CAACC,MAAR,EAZa;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAaVhB,MAAM,CAACD,GAAG,CAACI,EAAD,EAAK,OAAL,EAAcS,IAAI,CAACE,GAAnB,CAAJ,EAA6B;AACvCG,gBAAAA,IAAI,EAAEL,IAAI,CAACM,WAD4B;AAEvCC,gBAAAA,KAAK,EAAEP,IAAI,CAACO,KAF2B;AAGvCC,gBAAAA,SAAS,EAAElB,eAAe;AAHa,eAA7B,CAbI;;AAAA;AAmBlBI,cAAAA,QAAQ,CAAC,GAAD,CAAR;AAnBkB;AAAA;;AAAA;AAAA;AAAA;AAqBlBF,cAAAA,KAAK,CAACiB,KAAN,CAAY,iCAAZ;;AArBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbb,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA,0BAASD,QAAQ,CAACe,QAAT,KAAsB,UAAtB,GAAmC,IAAnC,GAA0C,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAEd,aAA3C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAEe,UAApC;AAAgD,QAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArCQlB,K;UACUV,W,EACAD,W;;;KAFVW,K;AAuCT,eAAeA,KAAf","sourcesContent":["import { useLocation, useNavigate } from 'react-router-dom'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth'\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore'\nimport { db } from '../firebase.config'\nimport { toast } from 'react-toastify'\nimport googleIcon from '../assets/svg/googleIcon.svg'\n\nfunction OAuth() {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const onGoogleClick = async () => {\n    try {\n      const auth = getAuth()\n      const provider = new GoogleAuthProvider()\n      const result = await signInWithPopup(auth, provider)\n      const user = result.user\n\n      // Check for user\n      const docRef = doc(db, 'users', user.uid)\n      const docSnap = await getDoc(docRef)\n\n      // If user, doesn't exist, create user\n      if (!docSnap.exists()) {\n        await setDoc(doc(db, 'users', user.uid), {\n          name: user.displayName,\n          email: user.email,\n          timestamp: serverTimestamp(),\n        })\n      }\n      navigate('/')\n    } catch (error) {\n      toast.error('Could not authorize with Google')\n    }\n  }\n\n  return (\n    <div className='socialLogin'>\n      <p>Sign {location.pathname === '/sign-up' ? 'up' : 'in'} with </p>\n      <button className='socialIconDiv' onClick={onGoogleClick}>\n        <img className='socialIconImg' src={googleIcon} alt='google' />\n      </button>\n    </div>\n  )\n}\n\nexport default OAuth\n"]},"metadata":{},"sourceType":"module"}